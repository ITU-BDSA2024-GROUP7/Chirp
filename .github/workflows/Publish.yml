name: Publish
on:
  push:
    tags:
      - 'v*'  # This will trigger the workflow on any tag starting with 'v'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore src/Chirp.CLI.Client/Chirp.CLI.csproj

      - name: Restore dependencies CSVDB
        run: dotnet restore test/Chirp.CSVDB.Tests/Chirp.CSVDB.Tests.csproj

      - name: Restore dependencies unix
        run: dotnet restore test/Chirp.CLI.Client.Tests/Chirp.CLI.Client.Tests.csproj

      - name: Run tests integration
        run: dotnet test test/Chirp.CSVDB.Tests/Chirp.CSVDB.Tests.csproj --verbosity normal
      
      - name: Run tests unix
        run: dotnet test test/Chirp.CLI.Client.Tests/Chirp.CLI.Client.Tests.csproj --verbosity normal

  release:
    timeout-minutes: 60
    name: Release
    needs: test
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Build for all platforms
        if: env.SKIP_RELEASE != 'true'
        run: |
          dotnet publish src/Chirp.CLI.Client/Chirp.CLI.csproj -c Release -r ${{ matrix.target }} --self-contained false -o publish/${{ matrix.target }}
      # Create ZIP files
      - name: Zip the output
        if: env.SKIP_RELEASE != 'true'
        run: |
          zip -r chirp-${{ matrix.target }}.zip publish/${{ matrix.target }}

      # Upload the release artifacts and create the release
      - name: Create GitHub release
        if: env.SKIP_RELEASE != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}  # Use the new version tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifacts
        if: env.SKIP_RELEASE != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: chirp-${{ matrix.target }}.zip
          path: Chirp/chirp-${{ matrix.target }}.zip
