name: Build and Release Chirp

on:
  push:
    tags:
      - 'v*'

jobs:
  build-test-release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
       platform: [win-x64, osx-x64, linux-x64, linux-arm64, osx-arm64]
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x.x

    - name: Restore dependencies
      run: |
        dotnet restore src/Chirp.CLI.Client/Chirp.CLI.csproj
        dotnet restore test/Chirp.CSVDB.Tests/Chirp.CSVDB.Tests.csproj
        dotnet restore test/Chirp.CLI.Client.Tests/Chirp.CLI.Client.Tests.csproj

    - name: Run tests
      run: |
        dotnet test test/Chirp.CSVDB.Tests/Chirp.CSVDB.Tests.csproj --verbosity normal
        dotnet test test/Chirp.CLI.Client.Tests/Chirp.CLI.Client.Tests.csproj --verbosity normal

    - name: Build and package for multiple platforms
      run: |
        platforms=("win-x64" "osx-x64" "linux-x64" "linux-arm64" "osx-arm64")
        for platform in "${platforms[@]}"
        do
          dotnet publish src/Chirp.CLI.Client/Chirp.CLI.csproj -c Release -r $platform -p:PublishSingleFile=true --no-self-contained -o publish/$platform
          cd publish/$platform
          zip -r ../../chirp-$platform.zip .
          cd ../..
        done

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chirp-${{ matrix.platform }}.zip
        asset_name: chirp-${{ matrix.platform }}.zip
        asset_content_type: application/zip
